{"ast":null,"code":"import _slicedToArray from \"/Users/venkat/Downloads/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/venkat/Downloads/black-dashboard-react/src/components/ThemeWrapper/ThemeWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeContextWrapper(props) {\n  _s();\n\n  var _useState = useState(themes.dark),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(function () {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeContextWrapper, \"81LJbYGtqjdO775TVdpnETOnTlU=\");\n\n_c = ThemeContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextWrapper\");","map":{"version":3,"sources":["/Users/venkat/Downloads/black-dashboard-react/src/components/ThemeWrapper/ThemeWrapper.js"],"names":["React","useState","useEffect","ThemeContext","themes","ThemeContextWrapper","props","dark","theme","setTheme","changeTheme","light","document","body","classList","add","remove","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,uBAArC;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACjD,kBAA0BL,QAAQ,CAACG,MAAM,CAACG,IAAR,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,WAAT,CAAqBF,KAArB,EAA4B;AAC1BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDN,EAAAA,SAAS,CAAC,YAAM;AACd,YAAQM,KAAR;AACE,WAAKJ,MAAM,CAACO,KAAZ;AACEC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;AACA;;AACF,WAAKX,MAAM,CAACG,IAAZ;AACA;AACEK,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,eAA/B;AACA;AAPJ;AASD,GAVQ,EAUN,CAACR,KAAD,CAVM,CAAT;AAYA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,WAAW,EAAEA;AAA7B,KAA9B;AAAA,cACGJ,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBuBZ,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}