{"ast":null,"code":"import _classCallCheck from \"/Users/venkat/Desktop/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/venkat/Desktop/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/venkat/Desktop/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/venkat/Desktop/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/venkat/Desktop/black-dashboard-react/src/components/DataTable/DataTable.js\";\nimport { FormGroup, FormLabel, FormControl, ListItemText, TextField, Checkbox, FormControlLabel, Grid, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport MUIDataTable from '../../src';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Example = /*#__PURE__*/function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      ageFilterChecked: false\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = [{\n        name: 'Name',\n        options: {\n          filter: true,\n          filterOptions: {\n            renderValue: function renderValue(v) {\n              return v ? v.replace(/^(\\w).* (.*)$/, '$1. $2') : '';\n            }\n          },\n          //display: 'excluded',\n          filterType: 'dropdown'\n        }\n      }, {\n        label: 'Modified Title Label',\n        name: 'Title',\n        options: {\n          filter: true,\n          customFilterListOptions: {\n            render: function render(v) {\n              return v.toLowerCase();\n            }\n          }\n        }\n      }, {\n        label: 'Location',\n        name: 'Location',\n        options: {\n          filter: true,\n          display: 'true',\n          filterType: 'custom',\n          customFilterListOptions: {\n            render: function render(v) {\n              return v.map(function (l) {\n                return l.toUpperCase();\n              });\n            },\n            update: function update(filterList, filterPos, index) {\n              console.log('update');\n              console.log(filterList, filterPos, index);\n              filterList[index].splice(filterPos, 1);\n              return filterList;\n            }\n          },\n          filterOptions: {\n            logic: function logic(location, filters, row) {\n              if (filters.length) return !filters.includes(location);\n              return false;\n            },\n            display: function display(filterList, _onChange, index, column) {\n              var optionValues = ['Minneapolis', 'New York', 'Seattle'];\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"select-multiple-chip\",\n                  children: \"Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, _this2), /*#__PURE__*/_jsxDEV(Select, {\n                  multiple: true,\n                  value: filterList[index],\n                  renderValue: function renderValue(selected) {\n                    return selected.join(', ');\n                  },\n                  onChange: function onChange(event) {\n                    filterList[index] = event.target.value;\n\n                    _onChange(filterList[index], index, column);\n                  },\n                  children: optionValues.map(function (item) {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: item,\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        color: \"primary\",\n                        checked: filterList[index].indexOf(item) > -1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 25\n                      }, _this2), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 25\n                      }, _this2)]\n                    }, item, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 23\n                    }, _this2);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, _this2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, _this2);\n            }\n          }\n        }\n      }, {\n        name: 'Age',\n        options: {\n          filter: true,\n          filterType: 'custom',\n          // if the below value is set, these values will be used every time the table is rendered.\n          // it's best to let the table internally manage the filterList\n          //filterList: [25, 50],\n          customFilterListOptions: {\n            render: function render(v) {\n              if (v[0] && v[1] && _this2.state.ageFilterChecked) {\n                return [\"Min Age: \".concat(v[0]), \"Max Age: \".concat(v[1])];\n              } else if (v[0] && v[1] && !_this2.state.ageFilterChecked) {\n                return \"Min Age: \".concat(v[0], \", Max Age: \").concat(v[1]);\n              } else if (v[0]) {\n                return \"Min Age: \".concat(v[0]);\n              } else if (v[1]) {\n                return \"Max Age: \".concat(v[1]);\n              }\n\n              return [];\n            },\n            update: function update(filterList, filterPos, index) {\n              console.log('customFilterListOnDelete: ', filterList, filterPos, index);\n\n              if (filterPos === 0) {\n                filterList[index].splice(filterPos, 1, '');\n              } else if (filterPos === 1) {\n                filterList[index].splice(filterPos, 1);\n              } else if (filterPos === -1) {\n                filterList[index] = [];\n              }\n\n              return filterList;\n            }\n          },\n          filterOptions: {\n            names: [],\n            logic: function logic(age, filters) {\n              if (filters[0] && filters[1]) {\n                return age < filters[0] || age > filters[1];\n              } else if (filters[0]) {\n                return age < filters[0];\n              } else if (filters[1]) {\n                return age > filters[1];\n              }\n\n              return false;\n            },\n            display: function display(filterList, _onChange2, index, column) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 17\n                }, _this2), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"min\",\n                    value: filterList[index][0] || '',\n                    onChange: function onChange(event) {\n                      filterList[index][0] = event.target.value;\n\n                      _onChange2(filterList[index], index, column);\n                    },\n                    style: {\n                      width: '45%',\n                      marginRight: '5%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 19\n                  }, _this2), /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"max\",\n                    value: filterList[index][1] || '',\n                    onChange: function onChange(event) {\n                      filterList[index][1] = event.target.value;\n\n                      _onChange2(filterList[index], index, column);\n                    },\n                    style: {\n                      width: '45%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 19\n                  }, _this2), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: _this2.state.ageFilterChecked,\n                      onChange: function onChange(event) {\n                        return _this2.setState({\n                          ageFilterChecked: event.target.checked\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, _this2),\n                    label: \"Separate Values\",\n                    style: {\n                      marginLeft: '0px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 19\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 17\n                }, _this2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, _this2);\n            }\n          },\n          print: false\n        }\n      }, {\n        name: 'Salary',\n        options: {\n          filter: true,\n          filterType: 'checkbox',\n          filterOptions: {\n            names: ['Lower wages', 'Average wages', 'Higher wages'],\n            logic: function logic(salary, filterVal) {\n              salary = salary.replace(/[^\\d]/g, '');\n              var show = filterVal.indexOf('Lower wages') >= 0 && salary < 100000 || filterVal.indexOf('Average wages') >= 0 && salary >= 100000 && salary < 200000 || filterVal.indexOf('Higher wages') >= 0 && salary >= 200000;\n              return !show;\n            }\n          },\n          sort: false\n        }\n      }];\n      var data = [['Gabby George', 'Business Analyst', 'Minneapolis', 30, '$100,000'], ['Aiden Lloyd', 'Business Consultant', 'Dallas', 55, '$200,000'], ['Jaden Collins', 'Attorney', 'Santa Ana', 27, '$500,000'], ['Franky Rees', 'Business Analyst', 'St. Petersburg', 22, '$50,000'], ['Aaren Rose', 'Business Consultant', 'Toledo', 28, '$75,000'], ['Blake Duncan', 'Business Management Analyst', 'San Diego', 65, '$94,000'], ['Frankie Parry', 'Agency Legal Counsel', 'Jacksonville', 71, '$210,000'], ['Lane Wilson', 'Commercial Specialist', 'Omaha', 19, '$65,000'], ['Robin Duncan', 'Business Analyst', 'Los Angeles', 20, '$77,000'], ['Mel Brooks', 'Business Consultant', 'Oklahoma City', 37, '$135,000'], ['Harper White', 'Attorney', 'Pittsburgh', 52, '$420,000'], ['Kris Humphrey', 'Agency Legal Counsel', 'Laredo', 30, '$150,000'], ['Frankie Long', 'Industrial Analyst', 'Austin', 31, '$170,000'], ['Brynn Robbins', 'Business Analyst', 'Norfolk', 22, '$90,000'], ['Justice Mann', 'Business Consultant', 'Chicago', 24, '$133,000'], ['Addison Navarro', 'Business Management Analyst', 'New York', 50, '$295,000'], ['Jesse Welch', 'Agency Legal Counsel', 'Seattle', 28, '$200,000'], ['Eli Mejia', 'Commercial Specialist', 'Long Beach', 65, '$400,000'], ['Gene Leblanc', 'Industrial Analyst', 'Hartford', 34, '$110,000'], ['Danny Leon', 'Computer Scientist', 'Newark', 60, '$220,000'], ['Lane Lee', 'Corporate Counselor', 'Cincinnati', 52, '$180,000'], ['Jesse Hall', 'Business Analyst', 'Baltimore', 44, '$99,000'], ['Danni Hudson', 'Agency Legal Counsel', 'Tampa', 37, '$90,000'], ['Terry Macdonald', 'Commercial Specialist', 'Miami', 39, '$140,000'], ['Justice Mccarthy', 'Attorney', 'Tucson', 26, '$330,000'], ['Silver Carey', 'Computer Scientist', 'Memphis', 47, '$250,000'], ['Franky Miles', 'Industrial Analyst', 'Buffalo', 49, '$190,000'], ['Glen Nixon', 'Corporate Counselor', 'Arlington', 44, '$80,000'], ['Gabby Strickland', 'Business Process Consultant', 'Scottsdale', 26, '$45,000'], ['Mason Ray', 'Computer Scientist', 'San Francisco', 39, '$142,000']];\n      var options = {\n        filter: true,\n        filterType: 'multiselect',\n        responsive: 'standard',\n        setFilterChipProps: function setFilterChipProps(colIndex, colName, data) {\n          //console.log(colIndex, colName, data);\n          return {\n            color: 'primary',\n            variant: 'outlined',\n            className: 'testClass123'\n          };\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: 'ACME Employee list - customizeFilter',\n        data: data,\n        columns: columns,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport default Example;","map":{"version":3,"sources":["/Users/venkat/Desktop/black-dashboard-react/src/components/DataTable/DataTable.js"],"names":["FormGroup","FormLabel","FormControl","ListItemText","TextField","Checkbox","FormControlLabel","Grid","Select","InputLabel","MenuItem","React","MUIDataTable","Example","state","ageFilterChecked","columns","name","options","filter","filterOptions","renderValue","v","replace","filterType","label","customFilterListOptions","render","toLowerCase","display","map","l","toUpperCase","update","filterList","filterPos","index","console","log","splice","logic","location","filters","row","length","includes","onChange","column","optionValues","selected","join","event","target","value","item","indexOf","names","age","width","marginRight","setState","checked","marginLeft","print","salary","filterVal","show","sort","data","responsive","setFilterChipProps","colIndex","colName","color","variant","className","Component"],"mappings":"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","sourcesContent":["import {\n  FormGroup,\n  FormLabel,\n  FormControl,\n  ListItemText,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Select,\n  InputLabel,\n  MenuItem\n} from '@material-ui/core';\nimport React from 'react';\nimport MUIDataTable from '../../src';\n\nclass Example extends React.Component {\n  state = {\n    ageFilterChecked: false\n  };\n\n  render() {\n    const columns = [\n      {\n        name: 'Name',\n        options: {\n          filter: true,\n          filterOptions: {\n            renderValue: v => v ? v.replace(/^(\\w).* (.*)$/, '$1. $2') : ''\n          },\n          //display: 'excluded',\n          filterType: 'dropdown'\n        },\n      },\n      {\n        label: 'Modified Title Label',\n        name: 'Title',\n        options: {\n          filter: true,\n          customFilterListOptions: {\n            render: v => v.toLowerCase()\n          },\n        },\n      },\n      {\n        label: 'Location',\n        name: 'Location',\n        options: {\n          filter: true,\n          display: 'true',\n          filterType: 'custom',\n          customFilterListOptions: {\n            render: v => v.map(l => l.toUpperCase()),\n            update: (filterList, filterPos, index) => {\n              console.log('update');\n              console.log(filterList, filterPos, index);\n              filterList[index].splice(filterPos, 1);\n              return filterList;\n            }\n          },\n          filterOptions: {\n            logic: (location, filters, row) => {\n              if (filters.length) return !filters.includes(location);\n              return false;\n            },\n            display: (filterList, onChange, index, column) => {\n              const optionValues = ['Minneapolis', 'New York', 'Seattle'];\n              return (\n                <FormControl>\n                  <InputLabel htmlFor='select-multiple-chip'>\n                    Location\n                  </InputLabel>\n                  <Select\n                    multiple\n                    value={filterList[index]}\n                    renderValue={selected => selected.join(', ')}\n                    onChange={event => {\n                      filterList[index] = event.target.value;\n                      onChange(filterList[index], index, column);\n                    }}\n                  >\n                    {optionValues.map(item => (\n                      <MenuItem key={item} value={item}>\n                        <Checkbox\n                          color='primary'\n                          checked={filterList[index].indexOf(item) > -1}\n                        />\n                        <ListItemText primary={item} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              );\n            }\n          }\n        }\n      },\n      {\n        name: 'Age',\n        options: {\n          filter: true,\n          filterType: 'custom',\n\n          // if the below value is set, these values will be used every time the table is rendered.\n          // it's best to let the table internally manage the filterList\n          //filterList: [25, 50],\n          \n          customFilterListOptions: {\n            render: v => {\n              if (v[0] && v[1] && this.state.ageFilterChecked) {\n                return [`Min Age: ${v[0]}`, `Max Age: ${v[1]}`];\n              } else if (v[0] && v[1] && !this.state.ageFilterChecked) {\n                return `Min Age: ${v[0]}, Max Age: ${v[1]}`;\n              } else if (v[0]) {\n                return `Min Age: ${v[0]}`;\n              } else if (v[1]) {\n                return `Max Age: ${v[1]}`;\n              }\n              return [];\n            },\n            update: (filterList, filterPos, index) => {\n              console.log('customFilterListOnDelete: ', filterList, filterPos, index);\n\n              if (filterPos === 0) {\n                filterList[index].splice(filterPos, 1, '');\n              } else if (filterPos === 1) {\n                filterList[index].splice(filterPos, 1);\n              } else if (filterPos === -1) {\n                filterList[index] = [];\n              }\n\n              return filterList;\n            },\n          },\n          filterOptions: {\n            names: [],\n            logic(age, filters) {\n              if (filters[0] && filters[1]) {\n                return age < filters[0] || age > filters[1];\n              } else if (filters[0]) {\n                return age < filters[0];\n              } else if (filters[1]) {\n                return age > filters[1];\n              }\n              return false;\n            },\n            display: (filterList, onChange, index, column) => (\n              <div>\n                <FormLabel>Age</FormLabel>\n                <FormGroup row>\n                  <TextField\n                    label='min'\n                    value={filterList[index][0] || ''}\n                    onChange={event => {\n                      filterList[index][0] = event.target.value;\n                      onChange(filterList[index], index, column);\n                    }}\n                    style={{ width: '45%', marginRight: '5%' }}\n                  />\n                  <TextField\n                    label='max'\n                    value={filterList[index][1] || ''}\n                    onChange={event => {\n                      filterList[index][1] = event.target.value;\n                      onChange(filterList[index], index, column);\n                    }}\n                    style={{ width: '45%' }}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.ageFilterChecked}\n                        onChange={event => this.setState({ ageFilterChecked: event.target.checked })}\n                      />\n                    }\n                    label='Separate Values'\n                    style={{ marginLeft: '0px' }}\n                  />\n                </FormGroup>\n              </div>\n            ),\n          },\n          print: false,\n        },\n      },\n      {\n        name: 'Salary',\n        options: {\n          filter: true,\n          filterType: 'checkbox',\n          filterOptions: {\n            names: ['Lower wages', 'Average wages', 'Higher wages'],\n            logic(salary, filterVal) {\n              salary = salary.replace(/[^\\d]/g, '');\n              const show =\n                (filterVal.indexOf('Lower wages') >= 0 && salary < 100000) ||\n                (filterVal.indexOf('Average wages') >= 0 && salary >= 100000 && salary < 200000) ||\n                (filterVal.indexOf('Higher wages') >= 0 && salary >= 200000);\n              return !show;\n            },\n          },\n          sort: false,\n        },\n      },\n    ];\n\n    const data = [\n      ['Gabby George', 'Business Analyst', 'Minneapolis', 30, '$100,000'],\n      ['Aiden Lloyd', 'Business Consultant', 'Dallas', 55, '$200,000'],\n      ['Jaden Collins', 'Attorney', 'Santa Ana', 27, '$500,000'],\n      ['Franky Rees', 'Business Analyst', 'St. Petersburg', 22, '$50,000'],\n      ['Aaren Rose', 'Business Consultant', 'Toledo', 28, '$75,000'],\n      ['Blake Duncan', 'Business Management Analyst', 'San Diego', 65, '$94,000'],\n      ['Frankie Parry', 'Agency Legal Counsel', 'Jacksonville', 71, '$210,000'],\n      ['Lane Wilson', 'Commercial Specialist', 'Omaha', 19, '$65,000'],\n      ['Robin Duncan', 'Business Analyst', 'Los Angeles', 20, '$77,000'],\n      ['Mel Brooks', 'Business Consultant', 'Oklahoma City', 37, '$135,000'],\n      ['Harper White', 'Attorney', 'Pittsburgh', 52, '$420,000'],\n      ['Kris Humphrey', 'Agency Legal Counsel', 'Laredo', 30, '$150,000'],\n      ['Frankie Long', 'Industrial Analyst', 'Austin', 31, '$170,000'],\n      ['Brynn Robbins', 'Business Analyst', 'Norfolk', 22, '$90,000'],\n      ['Justice Mann', 'Business Consultant', 'Chicago', 24, '$133,000'],\n      ['Addison Navarro', 'Business Management Analyst', 'New York', 50, '$295,000'],\n      ['Jesse Welch', 'Agency Legal Counsel', 'Seattle', 28, '$200,000'],\n      ['Eli Mejia', 'Commercial Specialist', 'Long Beach', 65, '$400,000'],\n      ['Gene Leblanc', 'Industrial Analyst', 'Hartford', 34, '$110,000'],\n      ['Danny Leon', 'Computer Scientist', 'Newark', 60, '$220,000'],\n      ['Lane Lee', 'Corporate Counselor', 'Cincinnati', 52, '$180,000'],\n      ['Jesse Hall', 'Business Analyst', 'Baltimore', 44, '$99,000'],\n      ['Danni Hudson', 'Agency Legal Counsel', 'Tampa', 37, '$90,000'],\n      ['Terry Macdonald', 'Commercial Specialist', 'Miami', 39, '$140,000'],\n      ['Justice Mccarthy', 'Attorney', 'Tucson', 26, '$330,000'],\n      ['Silver Carey', 'Computer Scientist', 'Memphis', 47, '$250,000'],\n      ['Franky Miles', 'Industrial Analyst', 'Buffalo', 49, '$190,000'],\n      ['Glen Nixon', 'Corporate Counselor', 'Arlington', 44, '$80,000'],\n      ['Gabby Strickland', 'Business Process Consultant', 'Scottsdale', 26, '$45,000'],\n      ['Mason Ray', 'Computer Scientist', 'San Francisco', 39, '$142,000'],\n    ];\n\n    const options = {\n      filter: true,\n      filterType: 'multiselect',\n      responsive: 'standard',\n      setFilterChipProps: (colIndex, colName, data) => {\n        //console.log(colIndex, colName, data);\n        return {\n          color: 'primary',\n          variant: 'outlined',\n          className: 'testClass123',\n        };\n      }\n    };\n    \n    return (\n      <MUIDataTable title={'ACME Employee list - customizeFilter'} data={data} columns={columns} options={options} />\n    );\n  }\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}