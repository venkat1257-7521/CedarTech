{"ast":null,"code":"var _jsxFileName = \"/Users/venkat/Desktop/black-dashboard-react/src/views/DefectAnalytics/subviews/HorizontalBarChart/HorizontalbarChart.js\",\n    _this = this;\n\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport \"./HorizontalBarChart.css\";\nimport * as FaIcons from 'react-icons/fa';\nimport { ProductionLineAll, ProductionLine1, ProductionLine2 } from \"./MockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar HorizontalBarChart = function HorizontalBarChart(_ref) {\n  var ProductionLineState = _ref.ProductionLineState,\n      DefectState = _ref.DefectState,\n      LineChart_Defect_Example1 = _ref.LineChart_Defect_Example1;\n\n  if (ProductionLineState == \"All\") {\n    if (DefectState == \"All\") {\n      if (LineChart_Defect_Example1 == \"Hourly\") {\n        var MockData = ProductionLineAll.AllDefect.H;\n      }\n\n      var MockData = ProductionLineAll.AllDefect;\n    }\n\n    if (DefectState == \"SSCT\") {\n      var MockData = ProductionLineAll.SSCT;\n    }\n\n    if (DefectState == \"POCK\") {\n      var MockData = ProductionLineAll.POCK;\n    }\n\n    if (DefectState == \"POGR\") {\n      var MockData = ProductionLineAll.POGR;\n    }\n\n    if (DefectState == \"STANSTONE\") {\n      var MockData = ProductionLineAll.STANSTONE;\n    }\n\n    if (DefectState == \"STANWHITE\") {\n      var MockData = ProductionLineAll.STANWHITE;\n    }\n  }\n\n  if (ProductionLineState == \"1\") {\n    if (DefectState == \"All\") {\n      var MockData = ProductionLine1.AllDefect;\n    }\n\n    if (DefectState == \"SSCT\") {\n      var MockData = ProductionLine1.SSCT;\n    }\n\n    if (DefectState == \"POCK\") {\n      var MockData = ProductionLine1.POCK;\n    }\n\n    if (DefectState == \"POGR\") {\n      var MockData = ProductionLine1.POGR;\n    }\n\n    if (DefectState == \"STANSTONE\") {\n      var MockData = ProductionLine1.STANSTONE;\n    }\n\n    if (DefectState == \"STANWHITE\") {\n      var MockData = ProductionLine1.STANWHITE;\n    }\n  }\n\n  if (ProductionLineState == \"2\") {\n    if (DefectState == \"All\") {\n      var MockData = ProductionLine2.AllDefect;\n    }\n\n    if (DefectState == \"SSCT\") {\n      var MockData = ProductionLine2.SSCT;\n    }\n\n    if (DefectState == \"POCK\") {\n      var MockData = ProductionLine2.POCK;\n    }\n\n    if (DefectState == \"POGR\") {\n      var MockData = ProductionLine2.POGR;\n    }\n\n    if (DefectState == \"STANSTONE\") {\n      var MockData = ProductionLine2.STANSTONE;\n    }\n\n    if (DefectState == \"STANWHITE\") {\n      var MockData = ProductionLine2.STANWHITE;\n    }\n  }\n\n  var state = {\n    series: MockData.SeriesData,\n    options: {\n      chart: {\n        type: 'bar',\n        height: 350,\n        stacked: true,\n        stackType: '100%',\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          borderRadius: 0\n        }\n      },\n      stroke: {\n        width: 1,\n        colors: ['#fff']\n      },\n      xaxis: {\n        show: false,\n        categories: [\"\"],\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      grid: {\n        show: false,\n        borderColor: \"#000000\",\n        strokeDashArray: 0,\n        xaxis: {\n          lines: {\n            show: false\n          }\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        },\n        row: {\n          colors: \"#000000\",\n          opacity: 0.0\n        }\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'center',\n        offsetX: 40,\n        offsetY: 20,\n        fontSize: '15px',\n        fontFamily: \"Roboto\",\n        itemMargin: {\n          horizontal: 10\n        }\n      },\n      colors: [\"#111111\", \"#333333\", \"#555555\", \"#777777\", \"#999999\"]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HorizontalBarChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HorizontalBarChart-header\",\n      children: [/*#__PURE__*/_jsxDEV(FaIcons.FaPercentage, {\n        className: \"HorizontalBarChart-icon\",\n        size: 20,\n        color: 'white'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HorizontalBarChart-title\",\n        children: [MockData.title, \" Percentage\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HorizontalBarChart-body\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: state.options,\n        series: state.series,\n        type: \"bar\",\n        height: \"240\",\n        width: \"1050\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 13\n  }, _this);\n};\n\n_c = HorizontalBarChart;\nexport default HorizontalBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalBarChart\");","map":{"version":3,"sources":["/Users/venkat/Desktop/black-dashboard-react/src/views/DefectAnalytics/subviews/HorizontalBarChart/HorizontalbarChart.js"],"names":["React","Chart","FaIcons","ProductionLineAll","ProductionLine1","ProductionLine2","HorizontalBarChart","ProductionLineState","DefectState","LineChart_Defect_Example1","MockData","AllDefect","H","SSCT","POCK","POGR","STANSTONE","STANWHITE","state","series","SeriesData","options","chart","type","height","stacked","stackType","toolbar","show","plotOptions","bar","horizontal","borderRadius","stroke","width","colors","xaxis","categories","labels","axisBorder","grid","borderColor","strokeDashArray","lines","yaxis","row","opacity","legend","position","horizontalAlign","offsetX","offsetY","fontSize","fontFamily","itemMargin","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport \"./HorizontalBarChart.css\";\nimport * as FaIcons from 'react-icons/fa';\nimport {\n  ProductionLineAll,\n  ProductionLine1,\n  ProductionLine2\n} from \"./MockData\";\n\nconst HorizontalBarChart = ({ProductionLineState, DefectState, LineChart_Defect_Example1}) => {\nif(ProductionLineState== \"All\"){\n  if(DefectState == \"All\"){\n    if(LineChart_Defect_Example1 == \"Hourly\"){var MockData =  ProductionLineAll.AllDefect.H;}\n  var MockData =  ProductionLineAll.AllDefect;\n  }\n  if(DefectState == \"SSCT\"){\n    var MockData =  ProductionLineAll.SSCT;\n  }\n  if(DefectState == \"POCK\"){\n      var MockData =  ProductionLineAll.POCK;\n  }\n  if(DefectState == \"POGR\"){\n    var MockData =  ProductionLineAll.POGR;\n  }\n  if(DefectState == \"STANSTONE\"){\n    var MockData =  ProductionLineAll.STANSTONE;\n  }\n  if(DefectState == \"STANWHITE\"){\n    var MockData =  ProductionLineAll.STANWHITE;\n  }\n}\n\nif(ProductionLineState== \"1\"){\n  if(DefectState == \"All\"){\n  var MockData =  ProductionLine1.AllDefect;\n  }\n  if(DefectState == \"SSCT\"){\n    var MockData =  ProductionLine1.SSCT;\n  }\n  if(DefectState == \"POCK\"){\n      var MockData =  ProductionLine1.POCK;\n  }\n  if(DefectState == \"POGR\"){\n    var MockData =  ProductionLine1.POGR;\n  }\n  if(DefectState == \"STANSTONE\"){\n    var MockData =  ProductionLine1.STANSTONE;\n  }\n  if(DefectState == \"STANWHITE\"){\n    var MockData =  ProductionLine1.STANWHITE;\n  }\n}\n\nif(ProductionLineState== \"2\"){\n  if(DefectState == \"All\"){\n  var MockData =  ProductionLine2.AllDefect;\n  }\n  if(DefectState == \"SSCT\"){\n    var MockData =  ProductionLine2.SSCT;\n  }\n  if(DefectState == \"POCK\"){\n      var MockData =  ProductionLine2.POCK;\n  }\n  if(DefectState == \"POGR\"){\n    var MockData =  ProductionLine2.POGR;\n  }\n  if(DefectState == \"STANSTONE\"){\n    var MockData =  ProductionLine2.STANSTONE;\n  }\n  if(DefectState == \"STANWHITE\"){\n    var MockData =  ProductionLine2.STANWHITE;\n  }\n}\n\n\n\n      var state = {\n        series: MockData.SeriesData,\n          \n        options: {\n          chart: {\n            type: 'bar',\n            height: 350,\n            stacked: true,\n            stackType: '100%',\n            toolbar: {show: false}},\n\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              borderRadius : 0,}},\n\n          stroke: {\n            width: 1,\n            colors: ['#fff']},\n\n          xaxis: {           \n            show: false,\n            categories: [\"\"],           \n            labels: {show: false},\n            axisBorder: {show: false}},\n          \n          grid:{\n            show:false,\n            borderColor: \"#000000\",\n            strokeDashArray: 0,\n            xaxis: {\n                lines: {show: false}},\n            yaxis: {\n                lines: {show: true}},\n            row: {\n                colors: \"#000000\",\n                opacity: 0.0}},\n          \n          legend: {\n            position: 'top',\n            horizontalAlign: 'center',\n            offsetX: 40,\n            offsetY: 20,\n            fontSize: '15px',\n            fontFamily: \"Roboto\",\n            itemMargin: {horizontal: 10}},\n\n          colors: [\n            \"#111111\", \"#333333\", \"#555555\", \"#777777\", \"#999999\"]}};\n    \n  \n    \n      return (\n            <div className=\"HorizontalBarChart\" >\n                <div className='HorizontalBarChart-header'>\n                    <FaIcons.FaPercentage className='HorizontalBarChart-icon' size={20} color={'white'}/>\n                    <h3 className='HorizontalBarChart-title'>{MockData.title} Percentage</h3>\n                </div>\n                \n                <div className='HorizontalBarChart-body'>\n                        <Chart\n                        options={state.options}\n                        series={state.series}\n                        type=\"bar\"\n                        height=\"240\"\n                        width= \"1050\"\n                        \n                        />\n                </div>\n              </div>\n      );\n    }\n  \n  \n  \n  export default HorizontalBarChart;"]},"metadata":{},"sourceType":"module"}