{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getObjectDeepKeyValue_1 = __importDefault(require(\"./getObjectDeepKeyValue\"));\n\nvar isType_1 = require(\"./isType\");\n\nvar reverseList_1 = __importDefault(require(\"./reverseList\"));\n\nvar defaultGroupOptions = {\n  by: '',\n  limit: 0,\n  reversed: false\n};\n\nvar handleGroupReverse = function handleGroupReverse(groupedLists, reverse) {\n  if (reverse === void 0) {\n    reverse = false;\n  }\n\n  if (reverse && isType_1.isBoolean(reverse)) {\n    return groupedLists.map(function (group) {\n      return reverseList_1.default(group);\n    });\n  }\n\n  return groupedLists;\n};\n\nvar groupList = function groupList(list, options) {\n  if (options === void 0) {\n    options = defaultGroupOptions;\n  }\n\n  var groupLabels = [];\n\n  if (isType_1.isNilOrEmpty(options)) {\n    options = defaultGroupOptions;\n  }\n\n  var groupBy = options.by,\n      limit = options.limit;\n\n  if (groupBy && (isType_1.isFunction(groupBy) || isType_1.isString(groupBy))) {\n    var groupedList = list.reduce(function (prevList, item, idx) {\n      var groupLabel = isType_1.isFunction(groupBy) ? groupBy(item, idx) : getObjectDeepKeyValue_1.default(item, groupBy);\n\n      if (!prevList[groupLabel]) {\n        prevList[groupLabel] = [];\n      }\n\n      if (!limit || limit > 0 && prevList[groupLabel].length < limit) {\n        prevList[groupLabel].push(item);\n      }\n\n      return prevList;\n    }, {}); // using Set here so the order is preserved and prevent duplicates\n\n    groupLabels = Array.from(new Set(Object.keys(groupedList)));\n    return {\n      groupLabels: groupLabels,\n      groupLists: handleGroupReverse(Object.values(groupedList), options.reversed)\n    };\n  }\n\n  if (limit && isType_1.isNumber(limit) && limit > 0) {\n    var groupLabel_1 = 1;\n    var groupLists = list.reduce(function (prevList, item) {\n      if (!prevList[groupLabel_1]) {\n        prevList[groupLabel_1] = [];\n      }\n\n      prevList[groupLabel_1].push(item);\n\n      if (prevList[groupLabel_1].length === limit) {\n        groupLabel_1 += 1;\n      }\n\n      return prevList;\n    }, {});\n    groupLabels = Array.from(new Set(Object.keys(groupLists)));\n    return {\n      groupLabels: groupLabels,\n      groupLists: handleGroupReverse(Object.values(groupLists), options.reversed)\n    };\n  }\n\n  return {\n    groupLabels: groupLabels,\n    groupLists: handleGroupReverse([list], options.reversed)\n  };\n};\n\nexports.default = groupList;","map":{"version":3,"sources":["../../src/___utils/groupList.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar getObjectDeepKeyValue_1 = __importDefault(require(\"./getObjectDeepKeyValue\"));\nvar isType_1 = require(\"./isType\");\nvar reverseList_1 = __importDefault(require(\"./reverseList\"));\nvar defaultGroupOptions = {\n    by: '',\n    limit: 0,\n    reversed: false\n};\nvar handleGroupReverse = function (groupedLists, reverse) {\n    if (reverse === void 0) { reverse = false; }\n    if (reverse && isType_1.isBoolean(reverse)) {\n        return groupedLists.map(function (group) { return reverseList_1.default(group); });\n    }\n    return groupedLists;\n};\nvar groupList = function (list, options) {\n    if (options === void 0) { options = defaultGroupOptions; }\n    var groupLabels = [];\n    if (isType_1.isNilOrEmpty(options)) {\n        options = defaultGroupOptions;\n    }\n    var groupBy = options.by, limit = options.limit;\n    if (groupBy && (isType_1.isFunction(groupBy) || isType_1.isString(groupBy))) {\n        var groupedList = list\n            .reduce(function (prevList, item, idx) {\n            var groupLabel = isType_1.isFunction(groupBy)\n                ? groupBy(item, idx)\n                : getObjectDeepKeyValue_1.default(item, groupBy);\n            if (!prevList[groupLabel]) {\n                prevList[groupLabel] = [];\n            }\n            if (!limit || (limit > 0 && prevList[groupLabel].length < limit)) {\n                prevList[groupLabel].push(item);\n            }\n            return prevList;\n        }, {});\n        // using Set here so the order is preserved and prevent duplicates\n        groupLabels = Array.from(new Set(Object.keys(groupedList)));\n        return { groupLabels: groupLabels, groupLists: handleGroupReverse(Object.values(groupedList), options.reversed) };\n    }\n    if (limit && isType_1.isNumber(limit) && (limit > 0)) {\n        var groupLabel_1 = 1;\n        var groupLists = list\n            .reduce(function (prevList, item) {\n            if (!prevList[groupLabel_1]) {\n                prevList[groupLabel_1] = [];\n            }\n            prevList[groupLabel_1].push(item);\n            if (prevList[groupLabel_1].length === limit) {\n                groupLabel_1 += 1;\n            }\n            return prevList;\n        }, {});\n        groupLabels = Array.from(new Set(Object.keys(groupLists)));\n        return { groupLabels: groupLabels, groupLists: handleGroupReverse(Object.values(groupLists), options.reversed) };\n    }\n    return { groupLabels: groupLabels, groupLists: handleGroupReverse([list], options.reversed) };\n};\nexports.default = groupList;\n//# sourceMappingURL=groupList.js.map"]},"metadata":{},"sourceType":"script"}