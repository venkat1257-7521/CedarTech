{"ast":null,"code":"import _slicedToArray from \"/Users/venkat/Desktop/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/venkat/Desktop/black-dashboard-react/src/components/Navbars/AdminNavbar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport \"assets/css/myStyle.css\"; // reactstrap components\n\nimport { Button, ButtonGroup, Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Input, InputGroup, NavbarBrand, Navbar, NavLink, Nav, Container, Modal, NavbarToggler, ModalHeader } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminNavbar(props) {\n  _s();\n\n  var _React$useState = React.useState(\"HourlyData\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      bigChartData = _React$useState2[0],\n      setMultiAxisLineChart = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"HourlyData\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      bigChartData1 = _React$useState4[0],\n      setbigChartData1 = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"HourlyData\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      bigChartData11 = _React$useState6[0],\n      setbigChartData11 = _React$useState6[1];\n\n  var setBgChartData = function setBgChartData(name) {\n    setbigChartData(name);\n  };\n\n  var setBgChartData1 = function setBgChartData1(name) {\n    setbigChartData1(name);\n  };\n\n  var setBgChartData11 = function setBgChartData11(name) {\n    setbigChartData11(name);\n  };\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      collapseOpen = _React$useState8[0],\n      setcollapseOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      modalSearch = _React$useState10[0],\n      setmodalSearch = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"navbar-transparent\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      color = _React$useState12[0],\n      setcolor = _React$useState12[1];\n\n  React.useEffect(function () {\n    window.addEventListener(\"resize\", updateColor); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  }); // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  var updateColor = function updateColor() {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  }; // this function opens and closes the collapse on small devices\n\n\n  var toggleCollapse = function toggleCollapse() {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n\n    setcollapseOpen(!collapseOpen);\n  }; // this function is to open the Search modal\n\n\n  var toggleModalSearch = function toggleModalSearch() {\n    setmodalSearch(!modalSearch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      className: classNames(\"navbar-absolute\", color),\n      expand: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames(\"navbar-toggle d-inline\", {\n              toggled: props.sidebarOpened\n            }),\n            children: /*#__PURE__*/_jsxDEV(NavbarToggler, {\n              onClick: props.toggleSidebar,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavbarBrand, {\n            href: \"#pablo\",\n            onClick: function onClick(e) {\n              return e.preventDefault();\n            },\n            children: props.brandText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n          onClick: toggleCollapse,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          navbar: true,\n          isOpen: collapseOpen,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ml-auto\",\n            navbar: true,\n            children: [/*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n              nav: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"dropdown\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Production Line: All\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Production Line: 1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                className: \"btn-group-toggle float-right\",\n                \"data-toggle\": \"buttons\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  tag: \"label\",\n                  className: classNames(\"btn-simple\", {\n                    active: \"\"\n                  }),\n                  color: \"info\",\n                  id: \"0\",\n                  size: \"sm\",\n                  onClick: function onClick() {\n                    setBgChartData(\"HourlyData\");\n                    setBgChartData11(\"HourlyData\");\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n                    children: \"Hourly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-block d-sm-none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"info\",\n                  id: \"1\",\n                  size: \"sm\",\n                  tag: \"label\",\n                  className: classNames(\"btn-simple\", {\n                    active: \"\"\n                  }) // onClick={() => setBgChartData(\"data2\")}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n                    children: \"Daily\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-block d-sm-none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"info\",\n                  id: \"2\",\n                  size: \"sm\",\n                  tag: \"label\" // className={classNames(\"btn-simple\", {\n                  //   active: bigChartData === \"data3\",\n                  // })}\n                  // onClick={() => setBgChartData(\"data3\")}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-block d-sm-none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"separator d-lg-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      modalClassName: \"modal-search\",\n      isOpen: modalSearch,\n      toggle: toggleModalSearch,\n      children: /*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"SEARCH\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"Close\",\n          className: \"close\",\n          onClick: toggleModalSearch,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"tim-icons icon-simple-remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminNavbar, \"WvaHPCDMqr54albAtkvISACynBA=\");\n\n_c = AdminNavbar;\nexport default AdminNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminNavbar\");","map":{"version":3,"sources":["/Users/venkat/Desktop/black-dashboard-react/src/components/Navbars/AdminNavbar.js"],"names":["React","classNames","Button","ButtonGroup","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Input","InputGroup","NavbarBrand","Navbar","NavLink","Nav","Container","Modal","NavbarToggler","ModalHeader","AdminNavbar","props","useState","bigChartData","setMultiAxisLineChart","bigChartData1","setbigChartData1","bigChartData11","setbigChartData11","setBgChartData","name","setbigChartData","setBgChartData1","setBgChartData11","collapseOpen","setcollapseOpen","modalSearch","setmodalSearch","color","setcolor","useEffect","window","addEventListener","updateColor","cleanup","removeEventListener","innerWidth","toggleCollapse","toggleModalSearch","toggled","sidebarOpened","toggleSidebar","e","preventDefault","brandText","active"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,wBAAP,C,CAGA;;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,oBAPF,EAQEC,KARF,EASEC,UATF,EAUEC,WAVF,EAWEC,MAXF,EAYEC,OAZF,EAaEC,GAbF,EAcEC,SAdF,EAeEC,KAfF,EAgBEC,aAhBF,EAiBEC,WAjBF,QAmBO,YAnBP;;;;AAsBA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,wBAA8CpB,KAAK,CAACqB,QAAN,CAAe,YAAf,CAA9C;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,qBAArB;;AACA,yBAA0CvB,KAAK,CAACqB,QAAN,CAAe,YAAf,CAA1C;AAAA;AAAA,MAAOG,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,yBAA4CzB,KAAK,CAACqB,QAAN,CAAe,YAAf,CAA5C;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/BC,IAAAA,eAAe,CAACD,IAAD,CAAf;AACD,GAFD;;AAGA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACF,IAAD,EAAU;AAChCJ,IAAAA,gBAAgB,CAACI,IAAD,CAAhB;AACD,GAFD;;AAGA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,IAAD,EAAU;AAC/BF,IAAAA,iBAAiB,CAACE,IAAD,CAAjB;AACD,GAFH;;AAKA,yBAAwC7B,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAxC;AAAA;AAAA,MAAOY,YAAP;AAAA,MAAqBC,eAArB;;AACA,yBAAsClC,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAtC;AAAA;AAAA,MAAOc,WAAP;AAAA,MAAoBC,cAApB;;AACA,0BAA0BpC,KAAK,CAACqB,QAAN,CAAe,oBAAf,CAA1B;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AACAtC,EAAAA,KAAK,CAACuC,SAAN,CAAgB,YAAM;AACpBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,WAAlC,EADoB,CAEpB;;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,WAArC;AACD,KAFD;AAGD,GAND,EAnB0B,CA0B1B;;AACA,MAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIF,MAAM,CAACK,UAAP,GAAoB,GAApB,IAA2BZ,YAA/B,EAA6C;AAC3CK,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD;AACF,GAND,CA3B0B,CAkC1B;;;AACA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIb,YAAJ,EAAkB;AAChBK,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;;AACDJ,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAPD,CAnC0B,CA4C1B;;;AACA,MAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BX,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAElC,UAAU,CAAC,iBAAD,EAAoBoC,KAApB,CAA7B;AAAyD,MAAA,MAAM,EAAC,IAAhE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAEpC,UAAU,CAAC,wBAAD,EAA2B;AAC9C+C,cAAAA,OAAO,EAAE5B,KAAK,CAAC6B;AAD+B,aAA3B,CADvB;AAAA,mCAKE,QAAC,aAAD;AAAe,cAAA,OAAO,EAAE7B,KAAK,CAAC8B,aAA9B;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,qBAAOA,CAAC,CAACC,cAAF,EAAP;AAAA,aAApC;AAAA,sBACGhC,KAAK,CAACiC;AADT;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEP,cAAxB;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAsBE,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,MAAM,EAAEb,YAAzB;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,MAAM,MAA/B;AAAA,oCAEE,QAAC,oBAAD;AAAsB,cAAA,GAAG,MAAzB;AAAA,sCAEA;AAAA,uCACI;AAAA,yCACE;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFA,eAWA,QAAC,WAAD;AACU,gBAAA,SAAS,EAAC,8BADpB;AAEU,+BAAY,SAFtB;AAAA,wCAIU,QAAC,MAAD;AACE,kBAAA,GAAG,EAAC,OADN;AAEE,kBAAA,SAAS,EAAEhC,UAAU,CAAC,YAAD,EAAe;AAClCqD,oBAAAA,MAAM,EAAE;AAD0B,mBAAf,CAFvB;AAME,kBAAA,KAAK,EAAC,MANR;AAOE,kBAAA,EAAE,EAAC,GAPL;AAQE,kBAAA,IAAI,EAAC,IARP;AASE,kBAAA,OAAO,EAAE,mBAAM;AAAC1B,oBAAAA,cAAc,CAAC,YAAD,CAAd;AAA8BI,oBAAAA,gBAAgB,CAAC,YAAD,CAAhB;AAAgC,mBAThF;AAAA,0CAgBE;AAAM,oBAAA,SAAS,EAAC,oDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBF,eAmBE;AAAM,oBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJV,eA2BU,QAAC,MAAD;AACE,kBAAA,KAAK,EAAC,MADR;AAEE,kBAAA,EAAE,EAAC,GAFL;AAGE,kBAAA,IAAI,EAAC,IAHP;AAIE,kBAAA,GAAG,EAAC,OAJN;AAKE,kBAAA,SAAS,EAAE/B,UAAU,CAAC,YAAD,EAAe;AACnCqD,oBAAAA,MAAM,EAAE;AAD2B,mBAAf,CALvB,CAQE;AARF;AAAA,0CAUE;AAAM,oBAAA,SAAS,EAAC,oDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF,eAaE;AAAM,oBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3BV,eA4CU,QAAC,MAAD;AACE,kBAAA,KAAK,EAAC,MADR;AAEE,kBAAA,EAAE,EAAC,GAFL;AAGE,kBAAA,IAAI,EAAC,IAHP;AAIE,kBAAA,GAAG,EAAC,OAJN,CAKE;AACA;AACA;AACA;AARF;AAAA,0CAUE;AAAM,oBAAA,SAAS,EAAC,oDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF,eAaE;AAAM,oBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA5CV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eA4EE;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBA5EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA0GE,QAAC,KAAD;AACE,MAAA,cAAc,EAAC,cADjB;AAEE,MAAA,MAAM,EAAEnB,WAFV;AAGE,MAAA,MAAM,EAAEY,iBAHV;AAAA,6BAKE,QAAC,WAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,QAAnB;AAA4B,UAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,wBAAW,OADb;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,OAAO,EAAEA,iBAHX;AAAA,iCAKE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YA1GF;AAAA,kBADF;AA6HD;;GA7KQ5B,W;;KAAAA,W;AA+KT,eAAeA,WAAf","sourcesContent":["\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport \"assets/css/myStyle.css\"\n\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n  \n} from \"reactstrap\";\n\n\nfunction AdminNavbar(props) {\n  const [bigChartData, setMultiAxisLineChart] = React.useState(\"HourlyData\");\n  const [bigChartData1, setbigChartData1] = React.useState(\"HourlyData\");\n  const [bigChartData11, setbigChartData11] = React.useState(\"HourlyData\");\n  \n  const setBgChartData = (name) => {\n    setbigChartData(name);\n  };\n  const setBgChartData1 = (name) => {\n    setbigChartData1(name);\n  };\n  const setBgChartData11 = (name) => {\n      setbigChartData11(name);\n    };\n\n\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  \n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n\n              <UncontrolledDropdown nav>\n                \n              <div>\n                  <dropdown>\n                    <select>\n                      <option>Production Line: All</option>\n                      <option>Production Line: 1</option>\n                    </select>\n                  </dropdown>\n                </div>\n                \n              <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: \"\",\n                            \n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() => {setBgChartData(\"HourlyData\"); setBgChartData11(\"HourlyData\");}}\n                          \n                          \n                          \n                          \n                          \n                        >\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Hourly\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            \n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                           active: \"\",\n                          })}\n                          // onClick={() => setBgChartData(\"data2\")}\n                        >\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Daily\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            \n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          // className={classNames(\"btn-simple\", {\n                          //   active: bigChartData === \"data3\",\n                          // })}\n                          // onClick={() => setBgChartData(\"data3\")}\n                        >\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Monthly\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            \n                          </span>\n                        </Button>\n                      </ButtonGroup>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n"]},"metadata":{},"sourceType":"module"}