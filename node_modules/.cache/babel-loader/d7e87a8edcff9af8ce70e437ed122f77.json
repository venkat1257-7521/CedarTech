{"ast":null,"code":"var LineChart_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"#262626\",\n    titleFontColor: \"#ffffff\",\n    bodyFontColor: \"#ffffff\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.0)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 15,\n        padding: 20,\n        fontColor: \"#262626\"\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(255, 255, 255, 0)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        padding: 20,\n        fontColor: \"#262626\"\n      }\n    }]\n  }\n};\nvar LineChart_CycleTime1 = {\n  HourlyData: function HourlyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"12 AM\", \"1 AM\", \"2 AM\", \"3 AM\", \"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\", \"11 AM\", \"12 AM\", \"1 PM\", \"2 PM\", \"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\", \"8 PM\", \"9 PM\", \"10 PM\", \"11 PM\", \"12 PM\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 0,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [10, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100, 88, 70, 20, 30, 50, 80, 10, 38, 78, 46, 50, 70, 60, 40]\n      }]\n    };\n  },\n  DailyData: function DailyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"1/7/21\", \"2/8/21\", \"3/21\", \"4/7/21\", \"5/8/21\", \"6/21\", \"7/7/21\", \"8/8/21\", \"9/21\", \"10/7/21\", \"11/8/21\", \"12/21\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n      }]\n    };\n  },\n  MonthlyData: function MonthlyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n      }]\n    };\n  },\n  options: LineChart_options\n};\nvar LineChart_CycleTime2 = {\n  HourlyData: function HourlyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"12 AM\", \"1 AM\", \"2 AM\", \"3 AM\", \"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\", \"11 AM\", \"12 AM\", \"1 PM\", \"2 PM\", \"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\", \"8 PM\", \"9 PM\", \"10 PM\", \"11 PM\", \"12 PM\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 0,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100, 88, 70, 20, 30, 50, 80, 10, 38, 78, 46, 50, 70, 60, 40]\n      }]\n    };\n  },\n  DailyData: function DailyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"1/7/21\", \"2/8/21\", \"3/21\", \"4/7/21\", \"5/8/21\", \"6/21\", \"7/7/21\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n      }]\n    };\n  },\n  MonthlyData: function MonthlyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n      }]\n    };\n  },\n  options: LineChart_options\n};\nvar LineChart_CycleTime3 = {\n  HourlyData: function HourlyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"12 AM\", \"1 AM\", \"2 AM\", \"3 AM\", \"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\", \"11 AM\", \"12 AM\", \"1 PM\", \"2 PM\", \"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\", \"8 PM\", \"9 PM\", \"10 PM\", \"11 PM\", \"12 PM\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 0,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100, 88, 70, 20, 30, 50, 80, 10, 38, 78, 46, 50, 70, 60, 40]\n      }]\n    };\n  },\n  DailyData: function DailyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"1/7/21\", \"2/8/21\", \"3/21\", \"4/7/21\", \"5/8/21\", \"6/21\", \"7/7/21\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n      }]\n    };\n  },\n  MonthlyData: function MonthlyData(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n    gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"Defects\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#262626\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#262626\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#262626\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 0,\n        data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n      }]\n    };\n  },\n  options: LineChart_options\n};\nmodule.exports = {\n  LineChart_CycleTime1: LineChart_CycleTime1,\n  LineChart_CycleTime2: LineChart_CycleTime2,\n  LineChart_CycleTime3: LineChart_CycleTime3\n};","map":{"version":3,"sources":["/Users/venkat1257/Desktop/black-dashboard-react/src/views/Dashboard/sub-views/CycleTime/Chart_CycleTime.js"],"names":["LineChart_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","LineChart_CycleTime1","HourlyData","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","DailyData","MonthlyData","options","LineChart_CycleTime2","LineChart_CycleTime3","module","exports"],"mappings":"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","sourcesContent":["let LineChart_options = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      backgroundColor: \"#262626\",\n      titleFontColor: \"#ffffff\",\n      bodyFontColor: \"#ffffff\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 15,\n            padding: 20,\n            fontColor: \"#262626\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255, 255, 255, 0)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#262626\",\n          },\n        },\n      ],\n    },\n    \n  };\n\n\n  let LineChart_CycleTime1 = {\n    HourlyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"12 AM\",\n          \"1 AM\",\n          \"2 AM\",\n          \"3 AM\",\n          \"4 AM\",\n          \"5 AM\",\n          \"6 AM\",\n          \"7 AM\",\n          \"8 AM\",\n          \"9 AM\",\n          \"10 AM\",\n          \"11 AM\",\n          \"12 AM\",\n          \"1 PM\",\n          \"2 PM\",\n          \"3 PM\",\n          \"4 PM\",\n          \"5 PM\",\n          \"6 PM\",\n          \"7 PM\",\n          \"8 PM\",\n          \"9 PM\",\n          \"10 PM\",\n          \"11 PM\",\n          \"12 PM\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 0,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [10, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100, 88, 70, 20, 30, 50, 80, 10, 38, 78, 46, 50, 70, 60, 40],\n          },\n        ],\n      };\n    },\n    DailyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"1/7/21\",\n          \"2/8/21\",\n          \"3/21\",\n          \"4/7/21\",\n          \"5/8/21\",\n          \"6/21\",\n          \"7/7/21\",\n          \"8/8/21\",\n          \"9/21\",\n          \"10/7/21\",\n          \"11/8/21\",\n          \"12/21\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          },\n        ],\n      };\n    },\n    MonthlyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"JAN\",\n          \"FEB\",\n          \"MAR\",\n          \"APR\",\n          \"MAY\",\n          \"JUN\",\n          \"JUL\",\n          \"AUG\",\n          \"SEP\",\n          \"OCT\",\n          \"NOV\",\n          \"DEC\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n          },\n        ],\n      };\n    },\n    options: LineChart_options,\n  };\n\n\n  let LineChart_CycleTime2 = {\n    HourlyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"12 AM\",\n          \"1 AM\",\n          \"2 AM\",\n          \"3 AM\",\n          \"4 AM\",\n          \"5 AM\",\n          \"6 AM\",\n          \"7 AM\",\n          \"8 AM\",\n          \"9 AM\",\n          \"10 AM\",\n          \"11 AM\",\n          \"12 AM\",\n          \"1 PM\",\n          \"2 PM\",\n          \"3 PM\",\n          \"4 PM\",\n          \"5 PM\",\n          \"6 PM\",\n          \"7 PM\",\n          \"8 PM\",\n          \"9 PM\",\n          \"10 PM\",\n          \"11 PM\",\n          \"12 PM\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 0,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100, 88, 70, 20, 30, 50, 80, 10, 38, 78, 46, 50, 70, 60, 40],\n          },\n        ],\n      };\n    },\n    DailyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"1/7/21\",\n          \"2/8/21\",\n          \"3/21\",\n          \"4/7/21\",\n          \"5/8/21\",\n          \"6/21\",\n          \"7/7/21\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          },\n        ],\n      };\n    },\n    MonthlyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"JAN\",\n          \"FEB\",\n          \"MAR\",\n          \"APR\",\n          \"MAY\",\n          \"JUN\",\n          \"JUL\",\n          \"AUG\",\n          \"SEP\",\n          \"OCT\",\n          \"NOV\",\n          \"DEC\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n          },\n        ],\n      };\n    },\n    options: LineChart_options,\n  };\n\n\n  let LineChart_CycleTime3 = {\n    HourlyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"12 AM\",\n          \"1 AM\",\n          \"2 AM\",\n          \"3 AM\",\n          \"4 AM\",\n          \"5 AM\",\n          \"6 AM\",\n          \"7 AM\",\n          \"8 AM\",\n          \"9 AM\",\n          \"10 AM\",\n          \"11 AM\",\n          \"12 AM\",\n          \"1 PM\",\n          \"2 PM\",\n          \"3 PM\",\n          \"4 PM\",\n          \"5 PM\",\n          \"6 PM\",\n          \"7 PM\",\n          \"8 PM\",\n          \"9 PM\",\n          \"10 PM\",\n          \"11 PM\",\n          \"12 PM\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 0,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100, 88, 70, 20, 30, 50, 80, 10, 38, 78, 46, 50, 70, 60, 40],\n          },\n        ],\n      };\n    },\n    DailyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"1/7/21\",\n          \"2/8/21\",\n          \"3/21\",\n          \"4/7/21\",\n          \"5/8/21\",\n          \"6/21\",\n          \"7/7/21\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          },\n        ],\n      };\n    },\n    MonthlyData: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n  \n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(237,237,237,1)\");\n      gradientStroke.addColorStop(0, \"rgba(237,237,237,0)\"); //grey\n  \n      return {\n        labels: [\n          \"JAN\",\n          \"FEB\",\n          \"MAR\",\n          \"APR\",\n          \"MAY\",\n          \"JUN\",\n          \"JUL\",\n          \"AUG\",\n          \"SEP\",\n          \"OCT\",\n          \"NOV\",\n          \"DEC\",\n        ],\n        datasets: [\n          {\n            label: \"Defects\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#262626\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#262626\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#262626\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 0,\n            data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n          },\n        ],\n      };\n    },\n    options: LineChart_options,\n  };\n\n\n  module.exports = {\n    LineChart_CycleTime1,\n    LineChart_CycleTime2,\n    LineChart_CycleTime3,\n  };\n  "]},"metadata":{},"sourceType":"module"}