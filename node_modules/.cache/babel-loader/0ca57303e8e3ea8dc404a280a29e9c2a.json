{"ast":null,"code":"import _slicedToArray from \"/Users/venkat/Downloads/black-dashboard-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/venkat/Downloads/black-dashboard-react/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BackgroundColorWrapper(props) {\n  _s();\n\n  var _useState = useState(backgroundColors.blue),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BackgroundColorContext.Provider, {\n    value: {\n      color: color,\n      changeColor: changeColor\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BackgroundColorWrapper, \"zCV1X5RcD7f9enJKYCAIO1ZgiRs=\");\n\n_c = BackgroundColorWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundColorWrapper\");","map":{"version":3,"sources":["/Users/venkat/Downloads/black-dashboard-react/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js"],"names":["React","useState","BackgroundColorWrapper","props","backgroundColors","blue","color","setColor","changeColor","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACpD,kBAA0BF,QAAQ,CAACG,gBAAgB,CAACC,IAAlB,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,WAAT,CAAqBF,KAArB,EAA4B;AAC1BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAED,sBACE,QAAC,sBAAD,CAAwB,QAAxB;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,WAAW,EAAEA;AAA7B,KADT;AAAA,cAGGL,KAAK,CAACM;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAduBP,sB;;KAAAA,sB","sourcesContent":["import React, { useState } from \"react\";\n\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}