{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getType_1 = __importStar(require(\"./getType\"));\n\nexports.default = function (list) {\n  var listType = getType_1.default(list);\n\n  switch (listType) {\n    case getType_1.types.ARRAY:\n      return list;\n\n    case getType_1.types.OBJECT:\n      return Object.values(list);\n\n    case getType_1.types.SET:\n      return Array.from(list);\n\n    case getType_1.types.MAP:\n      return Array.from(list.values());\n\n    default:\n      return [];\n  }\n};","map":{"version":3,"sources":["../../src/___utils/convertListToArray.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,OAAA,CAAA,OAAA,GAAe,UAAC,IAAD,EAAU;AACrB,MAAM,QAAQ,GAAG,SAAA,CAAA,OAAA,CAAQ,IAAR,CAAjB;;AAEA,UAAQ,QAAR;AACI,SAAK,SAAA,CAAA,KAAA,CAAM,KAAX;AACI,aAAO,IAAP;;AACJ,SAAK,SAAA,CAAA,KAAA,CAAM,MAAX;AACI,aAAO,MAAM,CAAC,MAAP,CAAc,IAAd,CAAP;;AACJ,SAAK,SAAA,CAAA,KAAA,CAAM,GAAX;AACI,aAAO,KAAK,CAAC,IAAN,CAAW,IAAX,CAAP;;AACJ,SAAK,SAAA,CAAA,KAAA,CAAM,GAAX;AACI,aAAO,KAAK,CAAC,IAAN,CAAW,IAAI,CAAC,MAAL,EAAX,CAAP;;AACJ;AACI,aAAO,EAAP;AAVR;AAYH,CAfD","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar getType_1 = __importStar(require(\"./getType\"));\nexports.default = (function (list) {\n    var listType = getType_1.default(list);\n    switch (listType) {\n        case getType_1.types.ARRAY:\n            return list;\n        case getType_1.types.OBJECT:\n            return Object.values(list);\n        case getType_1.types.SET:\n            return Array.from(list);\n        case getType_1.types.MAP:\n            return Array.from(list.values());\n        default:\n            return [];\n    }\n});\n//# sourceMappingURL=convertListToArray.js.map"]},"metadata":{},"sourceType":"script"}