{"ast":null,"code":"var _jsxFileName = \"/Users/venkat/Desktop/black-dashboard-react/src/variables/PieChart.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { colors } from 'react-select';\nimport { VictoryPie, VictoryLabel } from 'victory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar data = [{\n  x: 1,\n  y: 1\n}, {\n  x: 2,\n  y: 2\n}, {\n  x: 3,\n  y: 3\n}, {\n  x: 4,\n  y: 4\n}, {\n  x: 5,\n  y: 5\n}, {\n  x: 6,\n  y: 6\n}];\nvar colorScales = data.map(function (item) {\n  return item.color;\n});\n\nfunction pieLabelRadius(fraction) {\n  if (fraction === 1) {\n    return 0;\n  } else if (fraction >= .5) {\n    return 0.5;\n  } else {\n    var t = Math.tan(fraction * Math.PI / 2);\n    return 2 * t / ((1 + t) * (1 + t));\n  }\n}\n\nfunction setSelectCategoryByName(name) {\n  var category = categories.filter(function (a) {\n    return a.name == name;\n  });\n  setSelectedCategory(category[0]);\n}\n\nexport default function renderChart() {\n  var chartData = processCategoryDataToDisplay();\n  var colorScales = chartData.map(function (item) {\n    return item.color;\n  });\n  var totalExpenseCount = chartData.reduce(function (a, b) {\n    return a + (b.expenseCount || 0);\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"shit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/venkat/Desktop/black-dashboard-react/src/variables/PieChart.js"],"names":["React","ReactDOM","colors","VictoryPie","VictoryLabel","data","x","y","colorScales","map","item","color","pieLabelRadius","fraction","t","Math","tan","PI","setSelectCategoryByName","name","category","categories","filter","a","setSelectedCategory","renderChart","chartData","processCategoryDataToDisplay","totalExpenseCount","reduce","b","expenseCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,SAAzC;;AAGA,IAAMC,IAAI,GAAG,CACT;AAACC,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CADS,EAET;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAFS,EAGT;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAHS,EAIT;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAJS,EAKT;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CALS,EAMT;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CANS,CAAb;AAQE,IAAIC,WAAW,GAAGH,IAAI,CAACI,GAAL,CAAS,UAACC,IAAD;AAAA,SAAUA,IAAI,CAACC,KAAf;AAAA,CAAT,CAAlB;;AACA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,MAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAChB,WAAO,CAAP;AACH,GAFD,MAEO,IAAIA,QAAQ,IAAI,EAAhB,EAAoB;AACvB,WAAO,GAAP;AACH,GAFM,MAEA;AACH,QAAMC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASH,QAAQ,GAAGE,IAAI,CAACE,EAAhB,GAAqB,CAA9B,CAAV;AACA,WAAQ,IAAEH,CAAH,IAAS,CAAC,IAAEA,CAAH,KAAO,IAAEA,CAAT,CAAT,CAAP;AACH;AACJ;;AAGD,SAASI,uBAAT,CAAiCC,IAAjC,EAAuC;AACnC,MAAIC,QAAQ,GAAGC,UAAU,CAACC,MAAX,CAAkB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACJ,IAAF,IAAUA,IAAd;AAAA,GAAnB,CAAf;AACAK,EAAAA,mBAAmB,CAACJ,QAAQ,CAAC,CAAD,CAAT,CAAnB;AACH;;AAED,eAAe,SAASK,WAAT,GAAuB;AAClC,MAAIC,SAAS,GAAGC,4BAA4B,EAA5C;AACA,MAAInB,WAAW,GAAGkB,SAAS,CAACjB,GAAV,CAAc,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,KAAf;AAAA,GAAd,CAAlB;AACA,MAAIiB,iBAAiB,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAACN,CAAD,EAAIO,CAAJ;AAAA,WAAUP,CAAC,IAAIO,CAAC,CAACC,YAAF,IAAkB,CAAtB,CAAX;AAAA,GAAjB,EAAsD,CAAtD,CAAxB;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;AAAA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {colors} from 'react-select';\nimport { VictoryPie, VictoryLabel } from 'victory';\n\n\nconst data = [\n    {x: 1, y: 1},\n    {x: 2, y: 2},\n    {x: 3, y: 3},\n    {x: 4, y: 4},\n    {x: 5, y: 5},\n    {x: 6, y: 6}\n  ];\n  let colorScales = data.map((item) => item.color);\n  function pieLabelRadius(fraction) {\n    if (fraction === 1) {\n        return 0;\n    } else if (fraction >= .5) {\n        return 0.5;\n    } else {\n        const t = Math.tan(fraction * Math.PI / 2);\n        return (2*t) / ((1+t)*(1+t));\n    }\n}\n\n\nfunction setSelectCategoryByName(name) {\n    let category = categories.filter(a => a.name == name)\n    setSelectedCategory(category[0])\n}\n\nexport default function renderChart() {\n    let chartData = processCategoryDataToDisplay()\n    let colorScales = chartData.map((item) => item.color)\n    let totalExpenseCount = chartData.reduce((a, b) => a + (b.expenseCount || 0), 0)\n\n\n\n    return (\n        <div>shit</div>\n    )\n\n};"]},"metadata":{},"sourceType":"module"}