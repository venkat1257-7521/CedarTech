{"ast":null,"code":"var _jsxFileName = \"/Users/venkat1257/Desktop/black-dashboard-react/src/views/Dashboard/Card/InfoCard.js\",\n    _this = this;\n\nimport React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport './InfoCard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar InfoCard = function InfoCard(_ref) {\n  var icon = _ref.icon,\n      title = _ref.title,\n      progress = _ref.progress,\n      text = _ref.text;\n  // \n  var Icon = icon;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infocard\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      className: \"card-icon\",\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      className: \"progressbar1\",\n      value: progress,\n      text: text,\n      strokeWidth: 12,\n      styles: progressBarStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n}; // const progressBarStyles = buildStyles({\n//     pathColor: `rgba(0, 0, 0, 1)`,\n//     textColor: 'black'\n// })\n\n\n_c = InfoCard;\nvar progressBarStyles = buildStyles({\n  pathColor: changecolor(),\n  textColor: 'black'\n});\n\nfunction changecolor(progress) {\n  if (progress > 1) {\n    var color = \"rgba(0, 0, 0, 1)\";\n    return color;\n  }\n}\n\nexport default InfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoCard\");","map":{"version":3,"sources":["/Users/venkat1257/Desktop/black-dashboard-react/src/views/Dashboard/Card/InfoCard.js"],"names":["React","CircularProgressbar","buildStyles","InfoCard","icon","title","progress","text","Icon","progressBarStyles","pathColor","changecolor","textColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;AACA,OAAO,4CAAP;AACA,OAAO,iBAAP;;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAEpD;AAEI,MAAMC,IAAI,GAAGJ,IAAb;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,IAAI,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,aAFJ,eAII,QAAC,mBAAD;AACA,MAAA,SAAS,EAAC,cADV;AAEA,MAAA,KAAK,EAAEE,QAFP;AAGA,MAAA,IAAI,EAAEC,IAHN;AAIA,MAAA,WAAW,EAAE,EAJb;AAKA,MAAA,MAAM,EAAGE;AALT;AAAA;AAAA;AAAA;AAAA,aAJJ,eAWI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BJ;AAA5B;AAAA;AAAA;AAAA;AAAA,aAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAiBH,CAxBD,C,CA6BA;AACA;AACA;AACA;;;KAhCMF,Q;AAiCN,IAAMM,iBAAiB,GAAGP,WAAW,CAAC;AAClCQ,EAAAA,SAAS,EAAEC,WAAW,EADY;AAElCC,EAAAA,SAAS,EAAE;AAFuB,CAAD,CAArC;;AAKA,SAASD,WAAT,CAAqBL,QAArB,EAA+B;AAC5B,MAAGA,QAAQ,GAAG,CAAd,EAAgB;AACZ,QAAMO,KAAK,qBAAX;AACH,WAAOA,KAAP;AACA;AACD;;AAIH,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport './InfoCard.scss'\n\n\nconst InfoCard = ({icon, title, progress, text}) => {\n\n// \n\n    const Icon = icon\n\n\n    return (\n        <div className='infocard'>\n\n            <Icon className='card-icon' size={30}/>\n\n            <CircularProgressbar \n            className='progressbar1' \n            value={progress} \n            text={text}\n            strokeWidth={12}\n            styles= {progressBarStyles} />\n\n            <h5 className='card-title'>{title}</h5>\n\n\n        </div>\n    )\n}\n\n\n\n\n// const progressBarStyles = buildStyles({\n//     pathColor: `rgba(0, 0, 0, 1)`,\n//     textColor: 'black'\n// })\nconst progressBarStyles = buildStyles({\n    pathColor: changecolor(),\n    textColor: 'black'\n})\n\nfunction changecolor(progress) {\n   if(progress > 1){\n       const color = `rgba(0, 0, 0, 1)`\n    return color\n   }\n  }\n\n\n\nexport default InfoCard"]},"metadata":{},"sourceType":"module"}