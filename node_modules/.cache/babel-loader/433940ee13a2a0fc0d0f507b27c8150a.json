{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar prop_types_1 = require(\"prop-types\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar propTypes = {\n  display: prop_types_1.shape({\n    grid: prop_types_1.bool,\n    gridGap: prop_types_1.string,\n    gridMinColumnWidth: prop_types_1.string,\n    row: prop_types_1.bool,\n    rowGap: prop_types_1.string\n  }),\n  displayGrid: prop_types_1.bool,\n  displayRow: prop_types_1.bool,\n  gridGap: prop_types_1.string,\n  minColumnWidth: prop_types_1.string,\n  rowGap: prop_types_1.string\n};\nvar defaultProps = {\n  display: {\n    grid: false,\n    gridGap: '20px',\n    gridMinColumnWidth: '200px',\n    row: false,\n    rowGap: '20px'\n  },\n  displayGrid: false,\n  displayRow: false,\n  gridGap: '20px',\n  minColumnWidth: '200px',\n  rowGap: '20px'\n};\n\nvar DisplayHandler = function DisplayHandler(props) {\n  var displayGrid = props.displayGrid,\n      displayRow = props.displayRow,\n      display = props.display,\n      gridGap = props.gridGap,\n      minColumnWidth = props.minColumnWidth,\n      rowGap = props.rowGap;\n  var childSpanRef = react_1.createRef();\n\n  var _a = react_1.useState(null),\n      combo = _a[0],\n      setParentComponent = _a[1];\n\n  var styleParentGrid = function styleParentGrid(styleTag, container) {\n    if (displayGrid || display.grid) {\n      var gap = display.gridGap || gridGap || defaultProps.display.gridGap;\n      var column = display.gridMinColumnWidth || minColumnWidth || defaultProps.display.gridMinColumnWidth;\n      var styleString = \"\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] {\\n                    display: grid;\\n                    grid-gap: \" + gap + \";\\n                    gap: \" + gap + \";\\n                    grid-template-columns: repeat(auto-fill, minmax(\" + column + \", 1fr));\\n                    grid-template-rows: auto;\\n                    align-items: stretch;\\n                }\\n                \\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] .__infinite-loader,\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] .___scroll-renderer-anchor,\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] .___list-separator {\\n                    grid-column: 1/-1;\\n                }\\n            \";\n      styleTag.innerHTML = styleString;\n    } else {\n      styleTag.innerHTML = '';\n    }\n  };\n\n  var styleParentRow = function styleParentRow(styleTag, container) {\n    if (displayRow || display.row) {\n      var gap = display.rowGap || rowGap || defaultProps.display.rowGap;\n      var styleString = \"\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] {\\n                    display: flex;\\n                    flex-direction: column;\\n                }\\n                \\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] > *:not(.__infinite-loader) {\\n                    display: block;\\n                    flex: 1;\\n                    width: 100%;\\n                    margin-bottom: \" + gap + \";\\n                }\\n            \";\n      styleTag.innerHTML = styleString;\n    } else {\n      styleTag.innerHTML = '';\n    }\n  };\n\n  var handleDisplayHandlerProps = function handleDisplayHandlerProps(container, style) {\n    if (container) {\n      if (display.grid || displayGrid) {\n        styleParentGrid(style, container);\n      } else if (display.row || displayRow) {\n        styleParentRow(style, container);\n      }\n    }\n  };\n\n  react_1.useEffect(function () {\n    if (combo) {\n      handleDisplayHandlerProps(combo[0], combo[1]);\n    }\n  });\n  react_1.useEffect(function () {\n    var current = childSpanRef.current;\n    var container = null;\n    var style = null;\n\n    if (current) {\n      var id = \"__container-\" + new Date().getTime();\n      container = current.parentNode;\n      container.setAttribute('data-cont', id);\n      style = document.createElement('STYLE');\n      style.id = id;\n      document.head.appendChild(style);\n      setParentComponent([container, style]);\n      handleDisplayHandlerProps(container, style);\n    } else {\n      console.warn('FlatList: it was not possible to get container\\'s ref. Styling will not be possible');\n    }\n\n    return function () {\n      if (style) {\n        style.remove();\n      }\n    };\n  }, []);\n  return react_1.default.createElement(react_1.default.Fragment, null, !combo && react_1.default.createElement(\"span\", {\n    ref: childSpanRef,\n    style: {\n      display: 'none'\n    }\n  }));\n};\n\nDisplayHandler.propTypes = propTypes;\nDisplayHandler.defaultProps = defaultProps;\nexports.default = DisplayHandler;","map":{"version":3,"sources":["../../src/___subComponents/DisplayHandler.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar prop_types_1 = require(\"prop-types\");\nvar react_1 = __importStar(require(\"react\"));\nvar propTypes = {\n    display: prop_types_1.shape({\n        grid: prop_types_1.bool,\n        gridGap: prop_types_1.string,\n        gridMinColumnWidth: prop_types_1.string,\n        row: prop_types_1.bool,\n        rowGap: prop_types_1.string\n    }),\n    displayGrid: prop_types_1.bool,\n    displayRow: prop_types_1.bool,\n    gridGap: prop_types_1.string,\n    minColumnWidth: prop_types_1.string,\n    rowGap: prop_types_1.string\n};\nvar defaultProps = {\n    display: {\n        grid: false,\n        gridGap: '20px',\n        gridMinColumnWidth: '200px',\n        row: false,\n        rowGap: '20px'\n    },\n    displayGrid: false,\n    displayRow: false,\n    gridGap: '20px',\n    minColumnWidth: '200px',\n    rowGap: '20px'\n};\nvar DisplayHandler = function (props) {\n    var displayGrid = props.displayGrid, displayRow = props.displayRow, display = props.display, gridGap = props.gridGap, minColumnWidth = props.minColumnWidth, rowGap = props.rowGap;\n    var childSpanRef = react_1.createRef();\n    var _a = react_1.useState(null), combo = _a[0], setParentComponent = _a[1];\n    var styleParentGrid = function (styleTag, container) {\n        if (displayGrid || display.grid) {\n            var gap = display.gridGap || gridGap || defaultProps.display.gridGap;\n            var column = display.gridMinColumnWidth || minColumnWidth || defaultProps.display.gridMinColumnWidth;\n            var styleString = \"\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] {\\n                    display: grid;\\n                    grid-gap: \" + gap + \";\\n                    gap: \" + gap + \";\\n                    grid-template-columns: repeat(auto-fill, minmax(\" + column + \", 1fr));\\n                    grid-template-rows: auto;\\n                    align-items: stretch;\\n                }\\n                \\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] .__infinite-loader,\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] .___scroll-renderer-anchor,\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] .___list-separator {\\n                    grid-column: 1/-1;\\n                }\\n            \";\n            styleTag.innerHTML = styleString;\n        }\n        else {\n            styleTag.innerHTML = '';\n        }\n    };\n    var styleParentRow = function (styleTag, container) {\n        if (displayRow || display.row) {\n            var gap = display.rowGap || rowGap || defaultProps.display.rowGap;\n            var styleString = \"\\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] {\\n                    display: flex;\\n                    flex-direction: column;\\n                }\\n                \\n                [data-cont=\\\"\" + container.dataset.cont + \"\\\"] > *:not(.__infinite-loader) {\\n                    display: block;\\n                    flex: 1;\\n                    width: 100%;\\n                    margin-bottom: \" + gap + \";\\n                }\\n            \";\n            styleTag.innerHTML = styleString;\n        }\n        else {\n            styleTag.innerHTML = '';\n        }\n    };\n    var handleDisplayHandlerProps = function (container, style) {\n        if (container) {\n            if (display.grid || displayGrid) {\n                styleParentGrid(style, container);\n            }\n            else if (display.row || displayRow) {\n                styleParentRow(style, container);\n            }\n        }\n    };\n    react_1.useEffect(function () {\n        if (combo) {\n            handleDisplayHandlerProps(combo[0], combo[1]);\n        }\n    });\n    react_1.useEffect(function () {\n        var current = childSpanRef.current;\n        var container = null;\n        var style = null;\n        if (current) {\n            var id = \"__container-\" + new Date().getTime();\n            container = current.parentNode;\n            container.setAttribute('data-cont', id);\n            style = document.createElement('STYLE');\n            style.id = id;\n            document.head.appendChild(style);\n            setParentComponent([container, style]);\n            handleDisplayHandlerProps(container, style);\n        }\n        else {\n            console.warn('FlatList: it was not possible to get container\\'s ref. Styling will not be possible');\n        }\n        return function () {\n            if (style) {\n                style.remove();\n            }\n        };\n    }, []);\n    return (react_1.default.createElement(react_1.default.Fragment, null, !combo && react_1.default.createElement(\"span\", { ref: childSpanRef, style: { display: 'none' } })));\n};\nDisplayHandler.propTypes = propTypes;\nDisplayHandler.defaultProps = defaultProps;\nexports.default = DisplayHandler;\n//# sourceMappingURL=DisplayHandler.js.map"]},"metadata":{},"sourceType":"script"}