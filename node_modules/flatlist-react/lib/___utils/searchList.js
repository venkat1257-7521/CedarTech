"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var filterList_1 = __importDefault(require("./filterList"));
var getObjectDeepKeyValue_1 = __importDefault(require("./getObjectDeepKeyValue"));
var isType_1 = require("./isType");
var defaultSearchOptions = {
    by: '0',
    caseInsensitive: false,
    everyWord: false,
    minCharactersCount: 3,
    term: ''
};
var defaultFilterByFn = function (item, term, caseInsensitive, by) {
    if (caseInsensitive === void 0) { caseInsensitive = false; }
    if (by === void 0) { by = '0'; }
    var keyValue = (isType_1.isObject(item) || isType_1.isArray(item))
        ? getObjectDeepKeyValue_1.default(item, by)
        : item;
    var value = caseInsensitive ? ("" + keyValue).toLowerCase() : "" + keyValue;
    if (isType_1.isArray(term)) {
        return term.some(function (t) {
            t = caseInsensitive ? t.toLowerCase() : t.trim();
            return value.search(t.trim()) >= 0;
        });
    }
    term = caseInsensitive ? term.toLowerCase() : term;
    return value.search(term.trim()) >= 0;
};
var getFilterByFn = function (term, by, caseInsensitive) {
    if (caseInsensitive === void 0) { caseInsensitive = false; }
    if (isType_1.isFunction(by)) {
        if (isType_1.isArray(term)) {
            return function (item, idx) { return term.some(function (t) {
                t = caseInsensitive ? t.toLowerCase() : t;
                return by(item, t.trim(), idx);
            }); };
        }
        term = caseInsensitive ? term.toLowerCase() : term;
        return function (item, idx) { return by(item, term.trim(), idx); };
    }
    if (isType_1.isArray(by)) {
        return function (item) { return by.some(function (key) {
            var keyCaseInsensitive = isType_1.isObject(key) && key.caseInsensitive !== undefined
                ? key.caseInsensitive : caseInsensitive;
            var keyBy = (isType_1.isObject(key) ? key.key : key) || '0';
            return defaultFilterByFn(item, term, keyCaseInsensitive, keyBy);
        }); };
    }
    return function (item) { return defaultFilterByFn(item, term, caseInsensitive, by || '0'); };
};
var searchList = function (list, options) {
    if (isType_1.isNilOrEmpty(options)) {
        options = defaultSearchOptions;
    }
    if (list.length > 0) {
        var term = options.term, _a = options.by, by = _a === void 0 ? '0' : _a, _b = options.minCharactersCount, minCharactersCount_1 = _b === void 0 ? 0 : _b;
        if (term && by && (term.length >= minCharactersCount_1)) {
            var everyWord = options.everyWord, caseInsensitive = options.caseInsensitive;
            if (everyWord) {
                var termWords = term
                    .trim()
                    .split(/\s+/)
                    .filter(function (word) { return (word.length >= minCharactersCount_1); });
                if (termWords.length > 0) {
                    var filterByFn = getFilterByFn(Array.from(new Set(termWords)), by, caseInsensitive);
                    return filterList_1.default(list, filterByFn);
                }
            }
            else {
                var filterByFn = getFilterByFn(term, by, caseInsensitive);
                return filterList_1.default(list, filterByFn);
            }
        }
    }
    return list;
};
exports.default = searchList;
//# sourceMappingURL=searchList.js.map